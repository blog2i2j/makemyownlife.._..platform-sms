<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.javayong.platform.sms.admin.dao.TSmsTemplateDAO">

  <resultMap id="BaseResultMap" type="cn.javayong.platform.sms.admin.domain.TSmsTemplate">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="template_type" jdbcType="TINYINT" property="templateType" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="sign_name" jdbcType="VARCHAR" property="signName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, template_name, template_type, content, sign_name , `status`, remark , create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_sms_template
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_sms_template
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.javayong.platform.sms.admin.domain.TSmsTemplate" useGeneratedKeys="true">
    insert into t_sms_template (id , template_name, template_type, content, sign_name,
      `status`, remark ,create_time, update_time
      )
    values (#{id} , #{templateName,jdbcType=VARCHAR}, #{templateType},  #{content,jdbcType=VARCHAR}, #{signName,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>

  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.javayong.platform.sms.admin.domain.TSmsTemplate" useGeneratedKeys="true" >
    insert into t_sms_template
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateName != null">
        template_name,
      </if>
      <if test="templateType != null">
        template_type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="signName != null">
        sign_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="templateType != null">
        #{templateType},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="signName != null">
        #{signName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="cn.javayong.platform.sms.admin.domain.TSmsTemplate">
    update t_sms_template
    <set>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="signName != null">
        sign_name = #{signName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="cn.javayong.platform.sms.admin.domain.TSmsTemplate">
    update t_sms_template
    set template_name = #{templateName,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      sign_name = #{signName,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      `remark` = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 根据条件查询短信模板列表 -->
  <select id="queryTemplates" parameterType="java.util.Map" resultType="cn.javayong.platform.sms.admin.domain.TSmsTemplate">
    <bind name="start" value="(page - 1) * size"/>
    <bind name="end" value="size"/>
    select id, template_name as templateName, template_type as templateType , content, sign_name as signName, `status`, remark,  create_time as createTime, update_time as updateTime
    from t_sms_template t
    <where>
      <if test="templateName != null and templateName != ''">
        and template_name like CONCAT('%', #{templateName}, '%')
      </if>
      <if test="signName != null and signName != ''">
        and sign_name like CONCAT('%', #{signName}, '%')
      </if>
      <if test="status != null">
        and `status` = #{status}
      </if>
    </where>
    order by t.update_time desc
    LIMIT #{start}, #{end}
  </select>

  <!-- 根据条件查询短信模板列表 -->
  <select id="queryTemplatesIdList" parameterType="java.util.Map" resultType="java.lang.Long">
    <bind name="start" value="(page - 1) * size"/>
    <bind name="end" value="size"/>
    select id
    from t_sms_template t
    <where>
      <if test="templateName != null and templateName != ''">
        and template_name like CONCAT('%', #{templateName}, '%')
      </if>
      <if test="signName != null and signName != ''">
        and sign_name like CONCAT('%', #{signName}, '%')
      </if>
      <if test="status != null">
        and `status` = #{status}
      </if>
    </where>
    order by t.update_time desc
    LIMIT #{start}, #{end}
  </select>



  <select id="queryCountTemplates" resultType="long" parameterType="map">
    select count(*) from t_sms_template
    <where>
      <if test="templateName != null and templateName != ''">
        and template_name like concat('%', #{templateName}, '%')
      </if>
      <if test="signName != null and signName != ''">
        and sign_name like concat('%', #{signName}, '%')
      </if>
      <if test="status != null">
        AND status = #{status}
      </if>
    </where>
  </select>

  <select id="queryTemplatesByIds" resultType="cn.javayong.platform.sms.admin.domain.TSmsTemplate">
    select id, template_name as templateName, template_type as templateType , content, sign_name as signName, `status`, remark,  create_time as createTime, update_time as updateTime
    from t_sms_template t
    where id in
        <foreach collection="idList" index="index" item="id" open="(" separator="," close=")">
          #{id}
        </foreach>
  </select>

</mapper>